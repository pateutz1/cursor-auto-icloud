name: Build Executables

on:
  push:
    tags:
      - "v*" # Trigger on tags like v1.0.0
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build Windows executable
        run: |
          # Set PowerShell to use UTF-8 encoding
          [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          $env:PYTHONIOENCODING = "utf-8"
          python build.py --platform windows

          # Check if the output directory exists and has files
          if (Test-Path "dist/windows") {
            Write-Host "Windows output directory exists"
            Get-ChildItem "dist/windows" -Recurse | ForEach-Object {
              Write-Host " - $($_.FullName) (Size: $($_.Length) bytes)"
            }
            
            # Check if directory is empty
            if (!(Get-ChildItem "dist/windows")) {
              Write-Host "Warning: Output directory is empty, creating placeholder file"
              "Placeholder file to prevent artifact upload failure" | Out-File -FilePath "dist/windows/placeholder.txt"
            }
          } else {
            Write-Host "Warning: Output directory not found, creating it with a placeholder file"
            New-Item -ItemType Directory -Path "dist/windows" -Force
            "Placeholder file to prevent artifact upload failure" | Out-File -FilePath "dist/windows/placeholder.txt"
          }

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: CursorKeepAlive-Windows
          path: dist/windows/
          if-no-files-found: warn

  build-macos-arm64:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build MacOS ARM executable
        run: |
          python build.py --platform mac_m1 --arch arm64

          # Check if the output directory exists and has files
          if [ -d "dist/mac_m1" ]; then
            echo "MacOS ARM output directory exists"
            find "dist/mac_m1" -type f -exec ls -la {} \;
            
            # Check if directory is empty
            if [ ! "$(ls -A dist/mac_m1)" ]; then
              echo "Warning: Output directory is empty, creating placeholder file"
              echo "Placeholder file to prevent artifact upload failure" > "dist/mac_m1/placeholder.txt"
            fi
          else
            echo "Warning: Output directory not found, creating it with a placeholder file"
            mkdir -p "dist/mac_m1"
            echo "Placeholder file to prevent artifact upload failure" > "dist/mac_m1/placeholder.txt"
          fi

      - name: Upload MacOS ARM artifact
        uses: actions/upload-artifact@v4
        with:
          name: CursorKeepAlive-MacOS-ARM64
          path: dist/mac_m1/
          if-no-files-found: warn

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build Linux executable
        run: |
          python build.py --platform linux

          # Check if the output directory exists and has files
          if [ -d "dist/linux" ]; then
            echo "Linux output directory exists"
            find "dist/linux" -type f -exec ls -la {} \;
            
            # Check if directory is empty
            if [ ! "$(ls -A dist/linux)" ]; then
              echo "Warning: Output directory is empty, creating placeholder file"
              echo "Placeholder file to prevent artifact upload failure" > "dist/linux/placeholder.txt"
            fi
          else
            echo "Warning: Output directory not found, creating it with a placeholder file"
            mkdir -p "dist/linux"
            echo "Placeholder file to prevent artifact upload failure" > "dist/linux/placeholder.txt"
          fi

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: CursorKeepAlive-Linux
          path: dist/linux/
          if-no-files-found: warn

  build-macos-intel:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build MacOS Intel executable
        run: |
          python build.py --platform mac_intel

          # Check if the output directory exists and has files
          if [ -d "dist/mac_intel" ]; then
            echo "MacOS Intel output directory exists"
            find "dist/mac_intel" -type f -exec ls -la {} \;
            
            # Check if directory is empty
            if [ ! "$(ls -A dist/mac_intel)" ]; then
              echo "Warning: Output directory is empty, creating placeholder file"
              echo "Placeholder file to prevent artifact upload failure" > "dist/mac_intel/placeholder.txt"
            fi
          else
            echo "Warning: Output directory not found, creating it with a placeholder file"
            mkdir -p "dist/mac_intel"
            echo "Placeholder file to prevent artifact upload failure" > "dist/mac_intel/placeholder.txt"
          fi

      - name: Upload MacOS Intel artifact
        uses: actions/upload-artifact@v4
        with:
          name: CursorKeepAlive-MacOS-Intel
          path: dist/mac_intel/
          if-no-files-found: warn
